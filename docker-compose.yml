version: "3.8"

volumes:
  rabbitmq_data:
  pgdata: 
  kongadata:


services:

  

  ###################################
  # Notification: The Notification microservice
  ###################################
  notification:
    build:
      context: ./backend/Notification
      dockerfile: Dockerfile
    image: xhihyu/notification:1.0
    restart: always
    depends_on:
      - rabbitmq
      - queue
    environment:
      PYTHONUNBUFFERED: 1
      user_url : http://user:5000/user/phoneNum/
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672

    ports:
    - "5100:5100"
 
  #######################################################
  # Queue: The Queue microservice
  #######################################################
  queue:
    build:
      context: ./backend/queue
      dockerfile: Dockerfile
    image: xhihyu/queue:1.0
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://root:root@host.docker.internal:8889/queue_database
      PYTHONUNBUFFERED: 1
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports: 
    - "5009:5009"


    
  #######################################################
  # Recommendation: The Recommendation microservice
  #######################################################
  recommendation:
    build:
      context: ./backend/Recommender
      dockerfile: Dockerfile
    image: xhihyu/recommendation:1.0
    restart: always
    depends_on:
      - ticketing
      - user
    environment:
      PYTHONUNBUFFERED: 1
    ports:
    - "5003:5003"

  
  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq
      
  #################################################
  # Ticketing: The Ticketing microservice
  #################################################
  ticketing:
    build:
      context: ./backend/Ticket
      dockerfile: Dockerfile
    image: xhihyu/ticketing:1.0
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:8889/halldata      
    ports:
    - "5004:5004"

  ###################################
  # User: The User microservice
  ###################################
  user:
    build:
      context: ./backend/User
      dockerfile: Dockerfile
    image: xhihyu/user:1.0
    restart: always

    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:8889/users
      PYTHONUNBUFFERED: 1
    ports:
    - "5000:5000"


  ###############################################
  # Concert: The Concert microservice
  ###############################################
  concert:
    build:
      context: ./backend/concert
      dockerfile: Dockerfile
    image: xhihyu/concert:1.0
    restart: always
    depends_on:
      - recommendation
      - queue
      - ticketing
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:8889/concertdata
      PYTHONUNBUFFERED: 1
    ports:
      - "5005:5005"

 
